daemon off;
master_process on;

# Logging level options:  debug | info | notice | warn | error | crit | alert | emerg
error_log "logs/http.log" info;

pid "data/nginx.pid";

events {
    worker_connections 200;
}

http {
    # NOTE: enabled for debugging purposes only and should be disabled prior to release
    access_log "logs/access.log";

    # use session cache
    ssl_session_cache builtin:5;

    server {
        listen 2709 ssl spdy;
        listen [::]:2709 ssl spdy setbindif=bptp0;
        server_name pairing;

        ssl_certificate     /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/master_pairing.cert;
        ssl_certificate_key /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/master_pairing.key;
        ssl_client_certificate /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/clients.cert;
        ssl_verify_client optional_no_ca;
        ssl_verify_depth 2;
        ssl_stapling on;

        if (!-e "data/authorized_device") {
            return 418 "The software is not authorized to run on this microcomputer";
        }
        root "app/native/www";

        # Locations that do not require auth
        location ~ ^/pairing/broker/.*$ {
            include nginx.fastcgi.conf;
            fastcgi_param SSL_CLIENT_CERT $ssl_client_cert;
        }

        location /pairing/pair {
            include nginx.websocket.conf;
            proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
            proxy_set_header X-Incoming-Server $server_addr;
        }
    }

    server {
        listen [::]:2708 ssl spdy setbindif=bptp0 default_server;

        ssl_certificate     /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/master.cert;
        ssl_certificate_key /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/master.key;
        ssl_client_certificate /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/clients.cert;
        ssl_verify_client on;
        ssl_verify_depth 2;
        ssl_stapling on;

        if (!-e "data/authorized_device") {
            return 418 "The software is not authorized to run on this microcomputer";
        }

        server_name sys.fuse;
        root "app/native/www";
        index index.html;

        # Force referer to be checked
        set $serverPath "";
        if ($http_referer ~ "^((http|https):\/\/.*:[0-9]+/).*") {
            set $serverPath $1;
        }

        set $expectedReferer $scheme://$server_addr:$server_port/;
        if ($expectedReferer != $serverPath) {
            set $expectedReferer $scheme://[$server_addr]:$server_port/;
        }
        if ($serverPath = "") {
            set $expectedReferer $serverPath;
        }
        if ($expectedReferer != $serverPath) {
            return 403 "Bad Referer";
        }

        # Static content
        location / {
            gzip_static on;
            expires 1d;
        }

        location @denied {
            more_set_headers 'Authi: Failed';
            return 403;
        }

        # Content that will be passed to Proxi
        location ~ ^/(browser|calendar|contacts|bbm|sms|messages|hub|device|clientsettings|notifications|phone)/broker/.*$ {
            root "data/authcookies";
            try_files /$http_authi_p /$cookie_authi_p @denied;
            include nginx.fastcgi.conf;
        }

        # Locations that do not require auth
        location ~ ^/(auth|pairing)/broker/.*$ {
            include nginx.fastcgi.conf;
        }

        location ~ ^/pairing/sbroker/.*$ {
            include nginx.fastcgi.conf;
            proxy_set_header X-Incoming-Server $server_addr;
        }

        location ~ ^/(push|ccl)/.*$ {
            include nginx.websocket.conf;
        }

        location ~ ^/filemanager/session/.*$ {
            include nginx.websocket.conf;
        }

        location ~ ^/bbm/files/.*$ {
            include nginx-auth-check.conf;
            root /accounts/1000/sharewith/bbmDataConsumers/sys.bbm.gYABgLOJBR2Vz7FzS.kdgJchuag;
            rewrite ^/bbm/files(/.*)$ $1 break;
        }

        location ~ ^/bbm/sharewith/.*$ {
            include nginx-auth-check.conf;
            root /accounts/1000/sharewith/bbm/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM;
            rewrite ^/bbm/sharewith(/.*)$ $1 break;
        }

        # Personal source icons
        location ~ ^/source_icons_p/.*$ {
            include nginx-auth-check.conf;

            root /accounts/1000/appdata;
            rewrite ^/source_icons_p(/.*)/icon(/.*) $1/app/public/icons/$2 break;
            return 404;
        }

        # Enterprise source icons
        location ~ ^/source_icons_e/.*$ {
            include nginx-auth-check.conf;

            root /accounts/1000-enterprise/appdata;
            rewrite ^/source_icons_e(/.*)/icon(/.*) $1/app/public/icons/$2 break;
            return 404;
        }

        # Personal image thumbnails
        location ~ ^/device/personal_tn/.*$ {
            include nginx-auth-check.conf;
            root /fs/sfs/mmsynclite/IMG;
            rewrite ^/device/personal_tn(/.*)$ $1 break;
        }

        # Enterprise image thumbnails
        location ~ ^/device/enterprise_tn/.*$ {
            include nginx-auth-check-enterprise.conf;
            root /enterprise/fs/sfs/mmsynclite/IMG;
            rewrite ^/device/enterprise_tn(/.*)$ $1 break;
        }

        location ~ ^/device/personal/.*$ {
            include nginx-auth-check.conf;
            include nginx-device-paths.conf;
            root /accounts/1000/shared;
            rewrite ^/device/personal(/.*)$ $1 break;
        }

        location ~ ^/device/webdav/.*$ {
            include nginx-auth-check.conf;
            include nginx-device-paths.conf;
            root "tmp/webdav";
            dav_access user:rw group:rw all:r;

            rewrite ^/device/webdav(/.*)$ $1 break;
        }

        location ~ ^/device/sdcard/.*$ {
            include nginx-auth-check.conf;
            include nginx-device-paths.conf;
            root /accounts/1000/removable;
            rewrite ^/device/sdcard(/.*)$ $1 break;
        }

        location ~ ^/device/enterprise/.*$ {
            include nginx-auth-check-enterprise.conf;
            include nginx-device-paths.conf;
            root /accounts/1000-enterprise;
            dav_access user:rw group:rw all:r;

            rewrite ^/device/enterprise(/.*)$ $1 break;
        }

        location ~ ^/dev/(motion|activity)/.*$ {
            include nginx.websocket.conf;
        }

        location /blend/locale/blend.region.chooser.js {
		    set $region $http_BlendRegion;

		    # If the header isn't set, default to english.
		    if ($region = "") {
			    set $region "en";
		    }
			rewrite ^ /blend/locale_region/blend.i18n.$region.js last;
        }

        location /blend/locale/blend.locale.chooser.js {
            #en-gb needs to come before en because it is a prefix match accept-language module uses
            set_from_accept_language $lang en-gb af ar ca cs da de el en es eu fi fr gl he hi hr hu id it ja kl ko ms nb nl pl pt-br pt ro ru sv th tr vi zh-cn zh-tw;
#            set $lang kl;
            rewrite ^ /blend/locale/$lang/blendweb.js last;
        }

        rim_dav_ext_methods PUT PROPFIND OPTIONS PROPPATCH LOCK UNLOCK DELETE COPY MOVE MKCOL;
        create_full_put_path on;
        rewrite_folder_uri on;
        client_max_body_size 16G;
    }

    server {
        listen 2708 ssl spdy;
        server_name P2PPairing;

        ssl_certificate     /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/master.cert;
        ssl_certificate_key /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/master.key;
        ssl_client_certificate /accounts/1000/appdata/sys.fuse.gYABgOQWagv3fU6DN3PbYTsScIM/data/clients.cert;
        ssl_verify_client on;
        ssl_verify_depth 2;
        ssl_stapling on;

        if (!-e "data/authorized_device") {
            return 418 "The software is not authorized to run on this microcomputer";
        }

        root "app/native/www";
        index index.html;

        location / {
            return 404;
        }

        location ~ ^/pairing/sbroker/.*$ {
            include nginx.fastcgi.conf;
            proxy_set_header X-Incoming-Server $server_addr;
        }
    }

    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/xml                              xml rss;
        image/gif                             gif;
        image/jpeg                            jpeg jpg;
        application/x-javascript              js;
        text/plain                            txt;
        text/x-component                      htc;
        text/mathml                           mml;
        image/png                             png;
        image/svg+xml                         svg;
        image/x-icon                          ico;
        image/x-jng                           jng;
        image/vnd.wap.wbmp                    wbmp;
        application/java-archive              jar war ear;
        application/mac-binhex40              hqx;
        application/pdf                       pdf;
        application/x-cocoa                   cco;
        application/x-java-archive-diff       jardiff;
        application/x-java-jnlp-file          jnlp;
        application/x-makeself                run;
        application/x-perl                    pl pm;
        application/x-pilot                   prc pdb;
        application/x-rar-compressed          rar;
        application/x-redhat-package-manager  rpm;
        application/x-sea                     sea;
        application/x-shockwave-flash         swf;
        application/x-stuffit                 sit;
        application/x-tcl                     tcl tk;
        application/x-x509-ca-cert            der pem crt;
        application/x-xpinstall               xpi;
        application/zip                       zip;
        application/octet-stream              deb;
        application/octet-stream              bin exe dll;
        application/octet-stream              dmg;
        application/octet-stream              eot;
        application/octet-stream              iso img;
        application/octet-stream              msi msp msm;
        audio/mpeg                            mp3;
        audio/x-realaudio                     ra;
        font/ttf                              ttf;
        video/mpeg                            mpeg mpg;
        video/quicktime                       mov;
        video/x-flv                           flv;
        video/x-msvideo                       avi;
        video/x-ms-wmv                        wmv;
        video/x-ms-asf                        asx asf;
        video/x-mng                           mng;
    }
}

